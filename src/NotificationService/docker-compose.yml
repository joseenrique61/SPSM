version: "3.8"

services:
  notificationservice:
    image: ${DOCKER_REGISTRY-}notificationservice
    build:
      context: .
      dockerfile: NotificationService/Dockerfile

    ports:
      - "${APP_PORT:-5001}:8080"

    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
      - EmailSettings__From=${FROM}
      - EmailSettings__DisplayName=${DISPLAY_NAME}
      - EmailSettings__Password=${PASSWORD}
      - EmailSettings__Host=${HOST}
      - EmailSettings__Port=${PORT}
      - SmsSettings__AccountSid=${ACCOUNT_SID}
      - SmsSettings__AuthToken=${AUTH_TOKEN}
      - SmsSettings__TwilioNumber=${TWILIO_NUMBER}

    depends_on:
      - postgres

    networks:
      - app-net

  postgres:
    image: postgres:17
    container_name: db_postgres_spsm
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net

volumes:
  postgres_data:

networks:
  app-net:
    driver: bridge

  # sqlserver:
  #   image: mcr.microsoft.com/mssql/server:2022-latest
  #   container_name: sqlserver_container
  #   ports:
  #     - "1433:1433"
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - SA_PASSWORD=${SA_PASSWORD}
  #     - MSSQL_PID=Express
  #   volumes:
  #     - sqlserver_data:/var/opt/mssql
  #   healthcheck:
  #     El comando que se ejecuta para comprobar la salud
  #     test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "${SA_PASSWORD}", "-Q", "SELECT 1"]
  #     interval: 10s   Comprueba cada 10 segundos
  #     timeout: 3s     Si la comprobacion tarda mas de 3 segundos, falla
  #     retries: 10     Intenta 10 veces antes de marcar el contenedor como "unhealthy"
  #     start_period: 10s Periodo de gracia al inicio antes de empezar a comprobar

# volumes:
  # sqlserver_data: